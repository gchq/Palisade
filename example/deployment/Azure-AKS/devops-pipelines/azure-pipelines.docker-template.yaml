steps:
- task: DownloadBuildArtifacts@0
  displayName: 'Download Build Artifacts'
  inputs:
    buildType: specific
    project: '$(System.TeamProjectId)'
    pipeline: 8
    specificBuildWithTriggering: true
    artifactName: local-docker
    downloadPath: '$(System.DefaultWorkingDirectory)/example/deployment/'

- task: Docker@0
  displayName: 'Build  ${{ parameters.imageName }} image'
  inputs:
    azureSubscription: 'palisade_rm'
    azureContainerRegistry: '{"loginServer":"tmppalisadeopsuksouthacr.azurecr.io", "id" : "/subscriptions/802df257-6032-4b50-884c-55cb9f074928/resourceGroups/DevOpsDemo-ContainerRegistry/providers/Microsoft.ContainerRegistry/registries/tmppalisadeopsuksouthacr"}'
    dockerFile: '$(System.DefaultWorkingDirectory)/example/deployment/local-docker/example-docker-services/${{ parameters.imageName }}/Dockerfile'
    imageName: '${{ parameters.imageName }}:$(Build.BuildId)'
    includeLatestTag: true

- task: Docker@0
  displayName: 'Push ${{ parameters.imageName }} image'
  inputs:
    azureSubscription: 'palisade_rm'
    azureContainerRegistry: '{"loginServer":"tmppalisadeopsuksouthacr.azurecr.io", "id" : "/subscriptions/802df257-6032-4b50-884c-55cb9f074928/resourceGroups/DevOpsDemo-ContainerRegistry/providers/Microsoft.ContainerRegistry/registries/tmppalisadeopsuksouthacr"}'
    action: 'Push an image'
    imageName: '${{ parameters.imageName }}:$(Build.BuildId)'
    includeLatestTag: true
