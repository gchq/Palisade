<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>multi-jvm-example</artifactId>
        <groupId>uk.gov.gchq.palisade</groupId>
        <version>0.2.0</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>multi-jvm-example-docker-runner</artifactId>

    <dependencies>
        <dependency>
            <groupId>${project.parent.groupId}</groupId>
            <artifactId>example-model</artifactId>
            <version>${project.parent.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.parent.groupId}</groupId>
            <artifactId>proxy-rest-palisade-service</artifactId>
            <version>${project.parent.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.parent.groupId}</groupId>
            <artifactId>proxy-rest-data-service</artifactId>
            <version>${project.parent.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.parent.groupId}</groupId>
            <artifactId>proxy-rest-user-service</artifactId>
            <version>${project.parent.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.parent.groupId}</groupId>
            <artifactId>proxy-rest-resource-service</artifactId>
            <version>${project.parent.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.parent.groupId}</groupId>
            <artifactId>proxy-rest-policy-service</artifactId>
            <version>${project.parent.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.parent.groupId}</groupId>
            <artifactId>proxy-rest-config-service</artifactId>
            <version>${project.parent.version}</version>
        </dependency>

        <!-- Test dependencies -->

        <dependency>
            <groupId>${project.parent.groupId}</groupId>
            <artifactId>multi-jvm-example-rest-data-service</artifactId>
            <version>${project.parent.version}</version>
            <classifier>classes</classifier>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${project.parent.groupId}</groupId>
            <artifactId>multi-jvm-example-rest-palisade-service</artifactId>
            <version>${project.parent.version}</version>
            <classifier>classes</classifier>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${project.parent.groupId}</groupId>
            <artifactId>multi-jvm-example-rest-policy-service</artifactId>
            <version>${project.parent.version}</version>
            <classifier>classes</classifier>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${project.parent.groupId}</groupId>
            <artifactId>multi-jvm-example-rest-config-service</artifactId>
            <version>${project.parent.version}</version>
            <classifier>classes</classifier>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${project.parent.groupId}</groupId>
            <artifactId>multi-jvm-example-rest-user-service</artifactId>
            <version>${project.parent.version}</version>
            <classifier>classes</classifier>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${project.parent.groupId}</groupId>
            <artifactId>multi-jvm-example-rest-resource-service</artifactId>
            <version>${project.parent.version}</version>
            <classifier>classes</classifier>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>${project.parent.groupId}</groupId>
            <artifactId>rest-data-service</artifactId>
            <version>${project.parent.version}</version>
            <classifier>classes</classifier>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${project.parent.groupId}</groupId>
            <artifactId>rest-palisade-service</artifactId>
            <version>${project.parent.version}</version>
            <classifier>classes</classifier>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${project.parent.groupId}</groupId>
            <artifactId>rest-policy-service</artifactId>
            <version>${project.parent.version}</version>
            <classifier>classes</classifier>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${project.parent.groupId}</groupId>
            <artifactId>rest-user-service</artifactId>
            <version>${project.parent.version}</version>
            <classifier>classes</classifier>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${project.parent.groupId}</groupId>
            <artifactId>rest-resource-service</artifactId>
            <version>${project.parent.version}</version>
            <classifier>classes</classifier>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${project.parent.groupId}</groupId>
            <artifactId>rest-config-service</artifactId>
            <version>${project.parent.version}</version>
            <classifier>classes</classifier>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${project.parent.groupId}</groupId>
            <artifactId>common</artifactId>
            <version>${project.parent.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${project.parent.groupId}</groupId>
            <artifactId>core-rest-service</artifactId>
            <version>${project.parent.version}</version>
            <classifier>classes</classifier>
        </dependency>
        <dependency>
            <groupId>${project.parent.groupId}</groupId>
            <artifactId>core-rest-service</artifactId>
            <version>${project.parent.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- Docker plugin for managing containers to run tsts against -->
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>${docker.maven.version}</version>
                <executions>
                    <execution>
                        <id>start-multi-jvm-example-docker-containers</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>start</goal>
                        </goals>
                        <configuration>
                            <autoCreateCustomNetworks>true</autoCreateCustomNetworks>
                            <images>
                                <image>
                                    <name>quay.io/coreos/etcd</name>
                                    <alias>etcd</alias>
                                    <run>
                                        <log>
                                            <prefix>etcd</prefix>
                                            <color>yellow</color>
                                        </log>
                                        <namingStrategy>alias</namingStrategy>
                                        <ports>
                                            <port>2379:2379</port>
                                        </ports>
                                        <network>
                                            <mode>custom</mode>
                                            <name>test-network</name>
                                        </network>
                                        <cmd>
                                            <arg>/usr/local/bin/etcd</arg>
                                            <arg>-name</arg>
                                            <arg>etcd</arg>
                                            <arg>--data-dir</arg>
                                            <arg>/tmp/etcd_data</arg>
                                            <arg>-advertise-client-urls</arg>
                                            <arg>http://etcd:2379</arg>
                                            <arg>-listen-client-urls</arg>
                                            <arg>http://0.0.0.0:2379</arg>
                                            <arg>-initial-advertise-peer-urls</arg>
                                            <arg>http://etcd:2380</arg>
                                            <arg>-listen-peer-urls</arg>
                                            <arg>http://0.0.0.0:2380</arg>
                                            <arg>-initial-cluster</arg>
                                            <arg>etcd=http://etcd:2380</arg>
                                        </cmd>
                                    </run>
                                </image>
                                <image>
                                    <name>config-service:test</name>
                                    <alias>config-service</alias>
                                    <run>
                                        <log>
                                            <prefix>config-service</prefix>
                                            <color>yellow</color>
                                        </log>
                                        <namingStrategy>alias</namingStrategy>
                                        <ports>
                                            <port>8085:8080</port>
                                        </ports>
                                        <network>
                                            <mode>custom</mode>
                                            <name>test-network</name>
                                        </network>
                                    </run>
                                </image>
                                <image>
                                    <name>user-service:test</name>
                                    <alias>user-service</alias>
                                    <run>
                                        <log>
                                            <prefix>user-service</prefix>
                                            <color>yellow</color>
                                        </log>
                                        <namingStrategy>alias</namingStrategy>
                                        <ports>
                                            <port>8083:8080</port>
                                        </ports>
                                        <network>
                                            <mode>custom</mode>
                                            <name>test-network</name>
                                        </network>
                                    </run>
                                </image>
                                <image>
                                    <name>data-service:test</name>
                                    <alias>data-service</alias>
                                    <run>
                                        <log>
                                            <prefix>data-service</prefix>
                                            <color>yellow</color>
                                        </log>
                                        <namingStrategy>alias</namingStrategy>
                                        <ports>
                                            <port>8084:8080</port>
                                        </ports>
                                        <volumes>
                                            <bind>
                                                <volume>../../example-model/target/classes:/data</volume>
                                            </bind>
                                        </volumes>
                                        <network>
                                            <mode>custom</mode>
                                            <name>test-network</name>
                                        </network>
                                    </run>
                                </image>
                                <image>
                                    <name>policy-service:test</name>
                                    <alias>policy-service</alias>
                                    <run>
                                        <log>
                                            <prefix>policy-service</prefix>
                                            <color>yellow</color>
                                        </log>
                                        <namingStrategy>alias</namingStrategy>
                                        <ports>
                                            <port>8081:8080</port>
                                        </ports>
                                        <network>
                                            <mode>custom</mode>
                                            <name>test-network</name>
                                        </network>
                                    </run>
                                </image>
                                <image>
                                    <name>resource-service:test</name>
                                    <alias>resource-service</alias>
                                    <run>
                                        <log>
                                            <prefix>resource-service</prefix>
                                            <color>yellow</color>
                                        </log>
                                        <namingStrategy>alias</namingStrategy>
                                        <volumes>
                                            <bind>
                                                <volume>../../example-model/target/classes:/data</volume>
                                            </bind>
                                        </volumes>
                                        <ports>
                                            <port>8082:8080</port>
                                        </ports>
                                        <network>
                                            <mode>custom</mode>
                                            <name>test-network</name>
                                        </network>
                                        <wait>
                                            <time>5000</time>
                                        </wait>
                                    </run>
                                </image>
                                <image>
                                    <name>palisade-service:test</name>
                                    <alias>palisade-service</alias>
                                    <run>
                                        <log>
                                            <prefix>palisade-service</prefix>
                                            <color>yellow</color>
                                        </log>
                                        <namingStrategy>alias</namingStrategy>
                                        <ports>
                                            <port>8080:8080</port>
                                        </ports>
                                        <network>
                                            <mode>custom</mode>
                                            <name>test-network</name>
                                        </network>
                                        <wait>
                                            <log>org.apache.catalina.startup.Catalina.start Server startup in.*</log>
                                            <time>150000</time>
                                        </wait>
                                    </run>
                                </image>
                            </images>
                        </configuration>
                    </execution>
                    <execution>
                        <id>stop-multi-jvm-example-docker-containers</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.1.1</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <shadedArtifactAttached>true</shadedArtifactAttached>
                    <shadedClassifierName>shaded</shadedClassifierName>
                    <shadedArtifactAttached>true</shadedArtifactAttached>
                    <filters>
                        <filter>
                            <artifact>*:*</artifact>
                            <excludes>
                                <exclude>META-INF/*.SF</exclude>
                                <exclude>META-INF/*.DSA</exclude>
                                <exclude>META-INF/*.RSA</exclude>
                            </excludes>
                        </filter>
                    </filters>
                </configuration>
            </plugin>
        </plugins>
    </build>


</project>